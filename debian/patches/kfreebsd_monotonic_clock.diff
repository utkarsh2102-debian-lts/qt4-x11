From: José Manuel Santamaría Lema <panfaust@gmail.com>
From: Pino Toscano <pino@kde.org>
From: Modestas Vainius <modax@debian.org>
Subject: Fix monotonic clock detection on kFreeBSD
Bug-Debian: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=624679
Last-Update: 2011-05-01
Origin: vendor
Forwarded: not-needed

Fix monotonic clock detection on kFreeBSD at configure time. This will finally
enable it in QElapsedTimer.

QProcess::waitForFinished() and all other qt_safe_select() users cannot safely
operate without monotonic clock because qt_safe_select() will indicate timeout
earlier than it is supposed when underlying select() call is interrupted
(errno=EINTR).

---
 config.tests/unix/clock-gettime/clock-gettime.pri |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/config.tests/unix/clock-gettime/clock-gettime.pri
+++ b/config.tests/unix/clock-gettime/clock-gettime.pri
@@ -1,2 +1,2 @@
 # clock_gettime() is implemented in librt on these systems
-linux-*|hpux-*|solaris-*:LIBS_PRIVATE *= -lrt
+linux-*|glibc-*|hpux-*|solaris-*:LIBS_PRIVATE *= -lrt
